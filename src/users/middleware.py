from django.conf import settings
from django.shortcuts import redirect
from django.utils.deprecation import MiddlewareMixin
from django.middleware.csrf import CsrfViewMiddleware

class CustomCsrfMiddleware(MiddlewareMixin, CsrfViewMiddleware):
    """The `CustomCsrfMiddleware` class is a custom middleware that extends Django's `CsrfViewMiddleware` 
    to handle CSRF verification failures. If a CSRF verification fails and results in a 403 response, 
    the middleware redirects the user to the login URL specified in the Django settings.

    :param MiddlewareMixin: A mixin that provides backward compatibility for middleware classes.
    :type MiddlewareMixin: MiddlewareMixin
    :param CsrfViewMiddleware: The base class for CSRF protection middleware.
    :type CsrfViewMiddleware: CsrfViewMiddleware
    """

    def process_response(self, request, response):
        """Override the `process_response` method to check for CSRF failures. If a CSRF failure is detected, 
        the user is redirected to the login page.

        :param request: The current HTTP request object.
        :type request: HttpRequest
        :param response: The response object generated by the view.
        :type response: HttpResponse
        :return: The original response or a redirect to the login page if a CSRF failure is detected.
        :rtype: HttpResponse
        """
        if response.status_code == 403 and 'CSRF verification failed' in str(response.content):
            return redirect(settings.LOGIN_URL)
        return super().process_response(request, response)